{"version":3,"sources":["styles/Form.module.css","styles/ListItem.module.css","styles/List.module.css","styles/TodoApp.module.css","context/TodoListContext.js","components/TodoApp/Form.jsx","components/TodoApp/ListItem.jsx","components/TodoApp/List.jsx","components/TodoApp/TodoApp.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TodoListContext","createContext","TodoListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","todos","setTodos","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTodo","title","id","uuidv4","removeTodo","filter","todo","clearList","findItem","item","find","editTodo","newTodos","map","children","Form","useContext","setTitle","onSubmit","e","preventDefault","className","formStyles","form","form_input","type","placeholder","required","onChange","target","form_buttons","form_button","onClick","ListItem","listItemStyles","list_item","list_item_edit","class","list_item_title","list_item_delete","List","length","listStyles","list","key","empty_list","TodoApp","todoAppStyles","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6e8e6283.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__wu33K\",\"form_input\":\"Form_form_input__3ApwS\",\"form_button\":\"Form_form_button__3c9YV\",\"form_buttons\":\"Form_form_buttons__2Ih1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_item\":\"ListItem_list_item__10c3S\",\"list_item_title\":\"ListItem_list_item_title__LOf88\",\"list_item_delete\":\"ListItem_list_item_delete__2ZaVP\",\"list_item_edit\":\"ListItem_list_item_edit__4C-wx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3MCyc\",\"empty_list\":\"List_empty_list__3UGco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoApp\":\"TodoApp_TodoApp__1C0RG\",\"title\":\"TodoApp_title__3hEm_\"};","import React, { createContext, useState, useEffect } from 'react';\nimport { v4 as uuidv4} from \"uuid\";\n\n\nexport const TodoListContext = createContext();\n\nconst TodoListContextProvider = (props) => {\n\n    const initialState = JSON.parse(localStorage.getItem(\"todos\")) || [];\n\n    const [todos, setTodos] = useState(initialState);\n\n    const [editItem, setEditItem] = useState(null);\n\n    useEffect(() => {\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }, [todos]);\n\n    const addTodo = (title) => {\n        setTodos([...todos, { title, id: uuidv4() }])\n    }\n\n    const removeTodo = id => {\n        setTodos(todos.filter(todo => todo.id !== id))\n    }\n\n    const clearList = () => {\n        setTodos([]);\n    }\n\n    const findItem = id => {\n        const item = todos.find(todo => todo.id === id);\n        setEditItem(item);\n    }\n\n    const editTodo = (title, id) => {\n        const newTodos = todos.map(todo => (todo.id === id ? {title, id} : todo));\n        setTodos(newTodos);\n        setEditItem(null);\n    }\n\n    return (\n        <TodoListContext.Provider value={{ todos, addTodo, removeTodo, clearList, findItem, editItem, editTodo }}>\n            {props.children}\n        </TodoListContext.Provider>\n    );\n}\n \nexport default TodoListContextProvider;","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { TodoListContext } from \"../../context/TodoListContext\";\r\nimport formStyles from \"../../styles/Form.module.css\";\r\n\r\nconst Form = () => {\r\n  const { addTodo, clearList, editItem, editTodo } =\r\n    useContext(TodoListContext);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!editItem) {\r\n      addTodo(title);\r\n      setTitle(\"\");\r\n    } else {\r\n      editTodo(title, editItem.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editItem !== null) {\r\n      setTitle(editItem.title);\r\n    } else {\r\n      setTitle(\"\");\r\n    }\r\n  }, [editItem]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={formStyles.form}>\r\n      <input\r\n        className={formStyles.form_input}\r\n        type=\"text\"\r\n        placeholder=\"Add Todo...\"\r\n        required\r\n        value={title}\r\n        onChange={handleChange}\r\n      />\r\n      <div className={formStyles.form_buttons}>\r\n        <button className={formStyles.form_button} type=\"submit\">\r\n          {editItem ? \"Edit Todo\" : \"Add Todo\"}\r\n        </button>\r\n        <button className={formStyles.form_button} onClick={clearList}>\r\n          Clear All\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useContext } from \"react\";\r\nimport { TodoListContext } from \"../../context/TodoListContext\";\r\nimport listItemStyles from \"../../styles/ListItem.module.css\";\r\n\r\nconst ListItem = ({ todo }) => {\r\n  const { removeTodo, findItem } = useContext(TodoListContext);\r\n\r\n  return (\r\n    <li className={listItemStyles.list_item}>\r\n      <div>\r\n        <button\r\n          className={listItemStyles.list_item_edit}\r\n          onClick={() => findItem(todo.id)}\r\n        >\r\n          <i class=\"bi bi-pencil-square\"></i>\r\n        </button>\r\n        <span className={listItemStyles.list_item_title}>{todo.title}</span>\r\n      </div>\r\n      <div>\r\n        <button\r\n          className={listItemStyles.list_item_delete}\r\n          onClick={() => removeTodo(todo.id)}\r\n        >\r\n          <i class=\"bi bi-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useContext } from \"react\";\r\nimport { TodoListContext } from \"../../context/TodoListContext\";\r\nimport ListItem from \"./ListItem\";\r\nimport listStyles from \"../../styles/List.module.css\";\r\n\r\nconst List = () => {\r\n  const { todos } = useContext(TodoListContext);\r\n\r\n  return (\r\n    <>\r\n      {todos.length ? (\r\n        <ul className={listStyles.list}>\r\n          {todos.map((todo) => {\r\n            return <ListItem todo={todo} key={todo.id} />;\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <div className={listStyles.empty_list}>\r\n          <h6>No Todos</h6>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport List from \"./List\";\r\nimport todoAppStyles from \"../../styles/TodoApp.module.css\";\r\n\r\nconst TodoApp = () => {\r\n  return (\r\n    <div className={todoAppStyles.TodoApp}>\r\n      <h1 className={todoAppStyles.title}>Todo App</h1>\r\n      <Form />\r\n      <List />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","import React from 'react';\nimport './App.css';\nimport TodoListContextProvider from './context/TodoListContext';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nfunction App() {\n\n    return (\n        <TodoListContextProvider>\n          <div className='App'>\n          <div className='row'>\n                <div className='col-12 col-md-8 offset-md-2 col-lg-6 offset-lg-3'>\n                  <TodoApp />\n                </div>\n          </div>\n              \n            </div>\n        </TodoListContextProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}